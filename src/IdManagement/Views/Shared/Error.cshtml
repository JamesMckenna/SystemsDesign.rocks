@model ErrorViewModel
@{
    ViewData["Title"] = "Error";
}

<h1 class="text-danger">Error.</h1>
<h2 class="text-danger">An error occurred while processing your request.</h2>
<div>
    @if (!String.IsNullOrEmpty(Model.Title))
    {
        <h4 style="display: inline;">Title:</h4>
        <h5 class="text-danger" style="display: inline;">@Model.Title</h5>
    }
</div>

<div>
    @if (Model.StatusCode.HasValue)
    {
        <h4 style="display: inline;">StatusCode:</h4>
        <h5 class="text-danger" style="display: inline;">@Model.StatusCode</h5>
    }
</div>

<div>
    @if (Model.Detail != null)
    {
        <h4 style="display: inline;">Details:</h4>
        <h5 class="text-danger" style="display: inline;">@Model.Detail</h5>
    }
</div>

<div>

    @if (Model.RequestId != null)
    {
        <h4 style="display: inline;">Request Id:</h4>
        <h5 class="text-danger" style="display: inline;">@Model.RequestId</h5>
    }
</div>


<h3>Development Mode</h3>
<p>
    Swapping to <strong>Development</strong> environment will display more detailed information about the error that occurred.
</p>
<p>
    <strong>The Development environment shouldn't be enabled for deployed applications.</strong>
    It can result in displaying sensitive information from exceptions to end users.
    For local debugging, enable the <strong>Development</strong> environment by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>
    and restarting the app.
</p>
